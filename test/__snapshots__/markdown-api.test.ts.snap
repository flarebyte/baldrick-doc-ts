// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`markdown-api should provide markdown for a docBase 1`] = `
"# API of object-crumble

> List of functions and variables for \`object-crumble\`

__Functions:__

* [abstractObject](docs/my-_API.md#abstractObject)
* [anyOfString](docs/my-_API.md#anyOfString)
* [mutateObject](docs/my-_API.md#mutateObject)
* [someUrl](docs/my-_API.md#someUrl)


__Variables:__

* [mutatorRules](docs/my-_API.md#mutatorRules)

## abstractObject

⎔ Convert any object to an abstract representation of the object structure
\`\`\`
abstractObject({name: \\"Jane\\"})
\`\`\`

### Parameters

* rules: Array of \`StringAbstractionRule\`: a list of rules used to infer the kind of value of each property in the object

* prefix: \`string\`: path of the object in the enclosing object, or empty if none

### Returns

an array of \`CrumbleAbstractedValue\` representing each \`path\` \`kind\` pair.


See [obj-abstractor.ts - L58](https://github.com/mycompany/my-project/blob/main/src/obj-abstractor.ts#L58)

## anyOfString

⎔ Detect a a string from a given list of string

### Parameters

* name: \`string\`: the keyword to return if the detection happens

* options: Array of \`string\`: a list of string that would satisfy the detection

### Returns

the \`name\` keyword or false


See [string-abstractor.ts - L19](https://github.com/mycompany/my-project/blob/main/src/string-abstractor.ts#L19)

## mutateObject

⎔ Mutates an object applying a list of mutation.
We are using currying to provide the list of mutations rules.
Only a single mutation is applied to facilitate the studying of the impact.

### Parameters

* rules: Array of \`CrumbleFieldMutation\`: a list of rules used to infer the kind of value of each property in the object

### Returns

a \`CrumbleObject\` representing most javascript objects


See [obj-mutator.ts - L104](https://github.com/mycompany/my-project/blob/main/src/obj-mutator.ts#L104)

## someUrl

⎔ Detect an url

### Parameters

* value: \`string\`: the text to check

### Returns

the \`url\` keyword or false


See [string-abstractor.ts - L9](https://github.com/mycompany/my-project/blob/main/src/string-abstractor.ts#L9)

## mutatorRules

Array of \`CrumbleFieldMutation\`

Basic mutator rules that can be used out of the box

See [obj-mutator.ts - L38](https://github.com/mycompany/my-project/blob/main/src/obj-mutator.ts#L38)"
`;

exports[`markdown-api should provide markdown for homepage 1`] = `
"# API of object-crumble

> List of functions and variables for \`object-crumble\`

__Functions:__

* [abstractObject](API.md#abstractObject)
* [anyOfString](API.md#anyOfString)
* [mutateObject](API.md#mutateObject)
* [someUrl](API.md#someUrl)


__Variables:__

* [mutatorRules](API.md#mutatorRules)

## abstractObject

⎔ Convert any object to an abstract representation of the object structure
\`\`\`
abstractObject({name: \\"Jane\\"})
\`\`\`

### Parameters

* rules: Array of \`StringAbstractionRule\`: a list of rules used to infer the kind of value of each property in the object

* prefix: \`string\`: path of the object in the enclosing object, or empty if none

### Returns

an array of \`CrumbleAbstractedValue\` representing each \`path\` \`kind\` pair.


See [obj-abstractor.ts - L58](https://github.com/mycompany/my-project/blob/main/src/obj-abstractor.ts#L58)

## anyOfString

⎔ Detect a a string from a given list of string

### Parameters

* name: \`string\`: the keyword to return if the detection happens

* options: Array of \`string\`: a list of string that would satisfy the detection

### Returns

the \`name\` keyword or false


See [string-abstractor.ts - L19](https://github.com/mycompany/my-project/blob/main/src/string-abstractor.ts#L19)

## mutateObject

⎔ Mutates an object applying a list of mutation.
We are using currying to provide the list of mutations rules.
Only a single mutation is applied to facilitate the studying of the impact.

### Parameters

* rules: Array of \`CrumbleFieldMutation\`: a list of rules used to infer the kind of value of each property in the object

### Returns

a \`CrumbleObject\` representing most javascript objects


See [obj-mutator.ts - L104](https://github.com/mycompany/my-project/blob/main/src/obj-mutator.ts#L104)

## someUrl

⎔ Detect an url

### Parameters

* value: \`string\`: the text to check

### Returns

the \`url\` keyword or false


See [string-abstractor.ts - L9](https://github.com/mycompany/my-project/blob/main/src/string-abstractor.ts#L9)

## mutatorRules

Array of \`CrumbleFieldMutation\`

Basic mutator rules that can be used out of the box

See [obj-mutator.ts - L38](https://github.com/mycompany/my-project/blob/main/src/obj-mutator.ts#L38)"
`;

exports[`markdown-api should provide markdown without homepage 1`] = `
"# API of object-crumble

> List of functions and variables for \`object-crumble\`

__Functions:__

* [abstractObject](API.md#abstractObject)
* [anyOfString](API.md#anyOfString)
* [mutateObject](API.md#mutateObject)
* [someUrl](API.md#someUrl)


__Variables:__

* [mutatorRules](API.md#mutatorRules)

## abstractObject

⎔ Convert any object to an abstract representation of the object structure
\`\`\`
abstractObject({name: \\"Jane\\"})
\`\`\`

### Parameters

* rules: Array of \`StringAbstractionRule\`: a list of rules used to infer the kind of value of each property in the object

* prefix: \`string\`: path of the object in the enclosing object, or empty if none

### Returns

an array of \`CrumbleAbstractedValue\` representing each \`path\` \`kind\` pair.


See [obj-abstractor.ts - L58](src/obj-abstractor.ts)

## anyOfString

⎔ Detect a a string from a given list of string

### Parameters

* name: \`string\`: the keyword to return if the detection happens

* options: Array of \`string\`: a list of string that would satisfy the detection

### Returns

the \`name\` keyword or false


See [string-abstractor.ts - L19](src/string-abstractor.ts)

## mutateObject

⎔ Mutates an object applying a list of mutation.
We are using currying to provide the list of mutations rules.
Only a single mutation is applied to facilitate the studying of the impact.

### Parameters

* rules: Array of \`CrumbleFieldMutation\`: a list of rules used to infer the kind of value of each property in the object

### Returns

a \`CrumbleObject\` representing most javascript objects


See [obj-mutator.ts - L104](src/obj-mutator.ts)

## someUrl

⎔ Detect an url

### Parameters

* value: \`string\`: the text to check

### Returns

the \`url\` keyword or false


See [string-abstractor.ts - L9](src/string-abstractor.ts)

## mutatorRules

Array of \`CrumbleFieldMutation\`

Basic mutator rules that can be used out of the box

See [obj-mutator.ts - L38](src/obj-mutator.ts)"
`;
